<style lang="scss" type="text/scss">
  .centerInfomation {
    margin-top: 20rpx;
    border-bottom: 400rpx solid #f4f4f4;
  }
  .centerInfomation-Module {
    &-1 {
      height: 240rpx;
    }
    &-2 {
      height: 180rpx;
    }
  }
  .centerInfomation-Tag {
    width: 48rpx;
    height: 96rpx;
  }

</style>

<template>
  <view class="centerInfomation">
    <Info class="centerInfomation-Module-1" :infoDatas.sync="infoDatas" :isStudent.sync="isStudent" :avatar.sync="avatar"></Info>
    <Show class="centerInfomation-Module-2" :showDatas.sync="showDatas" :isStudent.sync="isStudent"></Show>
    <Menu class="centerInfomation-Module-3" :menuList.sync="menuList" :isStudent.sync="isStudent"></Menu>
  </view>
</template>

<script>
	import page from '../base/basicPage.wpy'
  import GeneralIntroduction from '../../components/Menus/GeneralIntroduction'
  import MenuItems from '../../components/Menus/MenuItem'
  import Exhibits from '../../components/Menus/show'

  export default class Home extends page {
    config = {
      navigationBarTitleText: '个人中心',
			enablePullDownRefresh: false
    }
    components = {
      Info: GeneralIntroduction,
      Show: Exhibits,
      Menu: MenuItems
    }
    data = {
      menuList: [
        {
          unique: 'record',
          value: '我的花迹',
          imgUrl: '../../static/images/personalCenter/trace.svg'
        },
        {
          unique: 'application',
          value: '申请活动',
          imgUrl: '../../static/images/personalCenter/apply.svg'
        },
        {
          unique: 'message',
          value: '消息通知',
          imgUrl: '../../static/images/personalCenter/message.svg'
        },
        {
          unique: 'problem',
          value: '在线客服',
          imgUrl: '../../static/images/personalCenter/service.svg'
        }
      ],
      infoDatas: {
				status: -1
			},
      showDatas: [],
      isStudent: true,
      avatar: ''
    }
    computed = {}
    treatAjaxDatasStudent (data) {
      this.infoDatas = {
        name: data.name || this.$WX.getStorage('wxName'),
        schoolId: data.schoolId || '0',
        profession: data.profession || '请填写',
        status: data.status
      }
			this.$apply()
      this.showDatas = [
        {
          name: '小红花',
          src: '../../static/images/personalCenter/小红花.png',
          number: data.redFlowerNum || 0 + ' 朵',
          id: 'redFlower'
        },
        {
          name: '导师',
          src: '../../static/images/personalCenter/导师.png',
          number: data.tutorNum || 0 + ' 人',
          id: 'tutor'
        },
        {
          name: '义工',
          src: '../../static/images/personalCenter/义工.png',
          number: data.workedTime || 0 + ' 小时',
          id: 'workedTime'
        }
      ]
      this.$WX.setStorage('redFlowerNum', data.redFlowerNum)
      this.$apply()
    }
    treatAjaxDatasTutor (data) {
      this.infoDatas = {
        name: data.name || '请填写',
        isTutor: data.isTutor || 0,
        trade: data.trade || '请填写',
        company: data.company || '请填写',
        position: data.position || '请填写',
				status: data.status
      }
      this.showDatas = [
        {
          name: '小红花',
          src: '../../static/images/personalCenter/小红花.png',
          number: data.redFlowerNum || 0 + ' 朵',
          id: 'redFlower'
        },
        {
          name: '捐赠学生',
          src: '../../static/images/personalCenter/捐赠学生.png',
          number: data.stuNum || 0 + ' 人',
          id: 'stu'
        },
        {
          name: '沙漏',
          src: '../../static/images/personalCenter/沙漏.png',
          number: data.clockNum || 0 + ' 小时',
          id: 'clock'
        }
      ]
      this.$WX.setStorage('redflowerNum', data.redFlowerNum)
      this.$apply()
    }
    onLoad () {
			if (this.$WX.getStorage('hasAvatar') !== true) {
				this.avatar = this.$WX.getStorage('wxAvatar')
				this.$apply()
			}
      if (this.$WX.getStorage('role') === 1) {
        this.isStudent = true
        this.$API('StudentCenter').then(data => {
          this.treatAjaxDatasStudent(data.data)
					this.$API('DownLoad', {avatar: this.$WX.getStorage('userId') + '-avatar.jpg'})
						.then(res => {
							this.avatar = res.data
							this.$WX.setStorage('avatar', res.data)
							this.$apply()
						})
          })
      } else if (this.$WX.getStorage('role') === 2) {
        this.isStudent = false
				this.menuList[1].value = '发表文章'
        this.$API('TutorCenter')
          .then(data => {
            this.treatAjaxDatasTutor(data.data)
						this.$WX.setStorage('clockNum', data.data.clockNum)
          })
      } else {
				this.infoDatas = {
					name: '香蕉君',
					schoolId: '1',
					profession: '香蕉舞',
					status: -1
				}
				this.showDatas = [
					{
						name: '小红花',
						src: '../../static/images/personalCenter/小红花.png',
						number: 0 + ' 朵',
						id: 'redFlower'
					},
					{
						name: '导师',
						src: '../../static/images/personalCenter/导师.png',
						number: 0 + ' 人',
						id: 'tutor'
					},
					{
						name: '义工',
						src: '../../static/images/personalCenter/义工.png',
						number: 0 + ' 小时',
						id: 'workedTime'
					}
				]
				this.$apply()
			}
    }

    onShow () {
			if (this.$WX.getStorage('hasAvatar') !== true) {
				this.avatar = this.$WX.getStorage('wxAvatar')
				this.$apply()
			}
			// 随便调个接口去触发
			if (this.$WX.getStorage('role') === 0) {
				this.$API('Shit')
				return false
			}
//			if (this.$WX.getStorage('role') === 0) {
//				this.$WX.modal('您尚未注册，是否前往注册？', '提示')
//					.then(res => {
//							if (res.confirm) {
//								this.$WX.toast('正前往注册页面')
//								this.$WX.jumpTo('./login')
//							} else if (res.cancel) {
//								this.$WX.toast('前往首页')
//								this.$WX.jumpTo('../home')
//							}
//						}
//					)
//			} else {
				if (this.$WX.getStorage('hasChangeAvatar') === true) {
					this.$API('DownLoad', {avatar: this.$WX.getStorage('userId') + '-avatar.jpg'})
						.then(res => {
							this.avatar = res.data
							this.$WX.setStorage('avatar', res.data)
							this.$WX.clearStorage('hasChangeAvatar')
							this.$apply()
						})
				}
				if (this.$WX.getStorage('role') === 1) {
					this.isStudent = true
					this.$API('StudentCenter')
						.then(data => {
							this.treatAjaxDatasStudent(data.data)
					})
				} else if (this.$WX.getStorage('role') === 2) {
					this.isStudent = false
					this.menuList[1].value = '发表文章'
					this.$API('TutorCenter')
						.then(data => {
							this.treatAjaxDatasTutor(data.data)
						})
				}
			}
//    }
    onPageScroll () {
      this.$UTIL.debounce(() => {
        wx.stopPullDownRefresh()
      }, 300)
    }
    customData = {}
    methods = {}
    events = {
      'show-click': this.$UTIL.debounce((key, event) => {
        if (key === 'redFlower') {
          this.$WX.jumpTo('./redFlower')
        }
        if (key === 'stu') {
					this.$WX.jumpTo('./donate')
        }
        if (key === 'tutor') {
          this.$WX.jumpTo('./donate')
        }
        if (key === 'clock') {
					this.$WX.jumpTo('./time')
        }
        if (key === 'workedTime') {
					this.$WX.jumpTo('./time')
        }
      }, 200),
      'menu-click': this.$UTIL.debounce((key, event) => {
        if (key === 'record') {
          this.$WX.jumpTo('./record')
        }
        if (key === 'application') {
          if (this.isStudent) {
						this.$WX.jumpTo('./activity')
					} else {
						this.$WX.jumpTo('../writeArticle')
					}
        }
        if (key === 'message') {
          this.$WX.toast('前往消息通知')
        }
        if (key === 'problem') {
          this.$WX.toast('前往问题反馈')
        }
      }, 200),
      'change-information': this.$UTIL.debounce((key, event) => {
        this.$WX.jumpTo('./info')
      }, 200)
    }
  }
</script>
