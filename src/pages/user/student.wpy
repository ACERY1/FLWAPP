<style lang="scss" type="text/scss">
.empty-placeholder {
  font-size: 28rpx;
  color: #999999;
  position: absolute;
  top: 30%;
  left: 25%;
}
.donate-ul {
  display: flex;
  flex-flow: column nowrap;
  li {
     border-bottom: solid;
     border-color: #f4f4f4;
     border-width: 1rpx;
     height: 190rpx;
		 width: 750rpx;
     display: inline-flex;
     align-items: center;
     image:nth-child(1) {
       margin-left: 30rpx;
       margin-right: 30rpx;
       width: 128rpx;
       height: 128rpx;
       border-radius: 50%;
     }
     .avatar {
       width: 40rpx;
       height: 80rpx;
       position: absolute;
       right: 30rpx;
     }
     .name {
       font-size: 34rpx;
       color: #333333;
     }
     .other {
       margin-left: 30rpx;
       font-size: 26rpx;
       color: #999999;
     }
     .info {
       display: block;
       margin-top: 20rpx;
       font-size: 26rpx;
       color: #999999;
     }
   }
 }
</style>

<template>
		<scroll-view style="height: 101vh" class="donate-ul" scroll-y="true">
      <view class="empty-placeholder" wx:if="{{InfoList.length <= 0}}">
        Ta还没有为学生赠送小红花
      </view>
			<repeat for="{{InfoList}}" item="item" index="index">
				<li id="{{item.userId}}">
					<image src="{{item.avatar}}" mode="aspectFill" binderror="imageError" id="{{index}}"/>
					<div>
						<span class="name">{{item.name}}</span>
						<span class="other">{{item.profession}} | {{item.school}}</span>
						<span class="info">赠送Ta小红花{{item.sum}}朵</span>
					</div>
				</li>
			</repeat>
		</scroll-view>
</template>

<script>
  import page from '../base/basicPage.wpy'
  export default class Donate extends page {
    config = {
      enablePullDownRefresh: false,
      navigationBarTitleText: 'Ta欣赏的学生'
    }
    component = {}
    data = {
      InfoList: [],
			page: 0
    }
    computed = {}
    getDatas (data) {
      data.forEach(item => {
        this.InfoList.push({
          name: item.name,
          profession: item.profession,
          school: item.school,
          sum: item.sum,
          userId: item.userId
        })
      })
    }
    LoadDatas (role, count = 2) {
      const InfoListLength = this.InfoList.length
			this.$API(role, {page: this.page, userId: this.visitUserId})
				.then(res => {
					this.page++
					let imageArray = []
					this.getDatas(res.data)
					res.data.forEach(item => {
						imageArray.push(String(item.userId))
					})
          imageArray = imageArray.map(item => item + '-avatar.jpg')
          return this.$API('PostUserImagesName', imageArray)
        })
				.then(res => {
					this.InfoList.forEach((item, index) => {
						if (count === 1) {
							item.avatar = res.data[index]
						} else {
              if (index >= InfoListLength) {
                item.avatar = res.data[index - InfoListLength]
              }
            }
            this.$apply()
					})
			})
		}
    onLoad () {
      this.visitUserId = this.$WX.getStorage('visit_userId')
      this.LoadDatas('GetHomeStudent', 1)
    }
    onReachBottom () {
			this.LoadDatas('GetHomeStudent')
		}

    methods = {
      imageError (event) {
        let mark = event.target.id
        this.InfoList[mark].avatar = '../../static/images/logo.png'
        this.$apply()
			}
    }
  }
</script>
