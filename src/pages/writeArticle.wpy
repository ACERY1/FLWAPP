<style lang="scss" type="text/scss">
	.write-article {
		background-color: #f4f4f4;
		width: 750rpx;
		height: 1850rpx;
		padding-top: 64rpx;
		font-size: 28rpx;
		color: #999999;
		&-title {
			background-color: white;
			width: 615rpx;
			margin-left: 40rpx;
			padding-right: 30rpx;
			padding-left: 30rpx;
			height: 80rpx;
			margin-bottom: 64rpx;
		}
		&-body {
			height: 876rpx;
			width: 615rpx;
			padding-top: 20rpx;
			padding-right: 30rpx;
			margin-left: 40rpx;
			padding-left: 30rpx;
			margin-bottom: 64rpx;
			background-color: white;

		}
		&-image {
			width: 615rpx;
			padding: 30rpx;
			margin-left: 30rpx;
			margin-bottom: 64rpx;
			background-color: white;
			display: flex;
			flex-flow: row wrap;
			&-info {
				padding-left: 40rpx;
				padding-bottom: 10rpx;
			}
			&-delete-icon {
				position: relative;
				left: -28rpx;
				top: -236rpx;
				width: 30rpx;
				height: 30rpx;
			}
			&-content {
				width: 265rpx;
				height: 265rpx;
			}
		}
		&-buttons {
			margin-top: 30rpx;
			display: inline-flex;
			margin-left: 60rpx;
			margin-bottom: 30rpx;
			align-content: center;
			justify-content: center;
			button {
				display: inline-flex;
				justify-content: center;
				align-items: center;
				height: 64rpx;
				text-align: center;
				margin-right: 30rpx;
				border: 2rpx solid #666666;
				width: 300rpx;
				span {
					font-size: 28rpx;
				}
			}
			button:active {
				background-color: #ed4d3d;
				display: inline-flex;
				justify-content: center;
				align-items: center;
				color: white;
				height: 64rpx;
				text-align: center;
				margin-right: 30rpx;
				border: 2rpx solid #f4f4f4;
				width: 300rpx;
				span {
					font-size: 28rpx;
				}
			}
		}
	}

</style>

<template>
	<view class="write-article">
		<input maxlength="25" placeholder="请输入文章标题" class="write-article-title" bindinput="getTitleValue"/>
		<textarea placeholder="请输入文章内容" class="write-article-body" bindinput="getTextValue" maxlength="3000"/>
		<view class="write-article-image-info">最多选择10张图片</view>
		<view class="write-article-image">
			<repeat for="{{articleImageList}}" item="item" index="index">
				<view>
					<image class="write-article-image-content" src="{{item}}" data-index="{{index}}" @tap="imagePreview" mode="aspectFill"/>
					<image class="write-article-image-delete-icon" src="../../static/images/article/delete.svg" wx:if="{{item.length > 0}}" data-index="{{index}}" @tap="imageDelete"/>
				</view>
			</repeat>
		</view>
		<div class="write-article-buttons">
			<button @tap="InsertImage"><span>插入图片</span></button>
			<button @tap="SubmitArticle"><span>发表文章</span></button>
		</div>
	</view>
</template>

<script>
	import basicPage from './base/basicPage'
	export default class WriteArticle extends basicPage {
		config = {
			enablePullDownRefresh: false,
			navigationBarTitleText: '发表文章'
		}
		data = {
			nodes: '',
			sourceText: '',
			articleTitle: '',
			articleImageList: [],
			sourceArticle: ''
		}
		components = {}
		onLoad () {}
		methods = {
			InsertImage () {
				if (this.articleImageList.length >= 10) {
					this.$WX.toast('最多选择10张')
				} else {
					this.$WX.chooseImg(10 - this.articleImageList.length)
						.then(res => {
							res.tempFilePaths.map(item => {
								this.articleImageList.push(item)
							})
							this.$apply()
						})
				}
			},
			imageDelete (event) {
				console.log('删除图片')
				let index = event.currentTarget.dataset.index
				this.articleImageList.splice(index, 1)
			},
			imagePreview (event) {
				let index = event.currentTarget.dataset.index
				console.log('预览图片')
				wx.previewImage({
					urls: this.articleImageList,
					current: this.articleImageList[index]
				})
			},
			getTextValue (event) {
				this.sourceText = event.detail.value
			},
			getTitleValue (event) {
				this.articleTitle = event.detail.value
			},
			SubmitArticle () {
				if (this.articleTitle.length === 0) {
					this.$WX.toast('文章名不能为空')
					return
				}
				if (this.sourceText.length === 0) {
					this.$WX.toast('文章内容不能为空')
					return
				}
				let strImage = ''
				const promiseArray = []
				this.articleImageList.map(item => {
					let imgPath = item
					let imgName = Date.now() + '.jpg'
					promiseArray.push(this.$API('UpLoad', {id: imgName})
						.then(res => {
							let token = res.data
							return this.$WX.UpLoadFile(imgPath, {'key': imgName, token: token})
						})
						.then(res => {
							return this.$API('DownLoad', {imgName: imgName})
						})
						.then(res => {
							strImage += '<img src=' + '"' + res.data + '"' + 'style="max-width: 100%" />'
						}))
				})
				Promise.all(promiseArray)
					.then(res => {
						this.sourceArticle = '<p>' + this.sourceText + '</p>'
						this.sourceArticle = strImage + '<br>' + JSON.parse(JSON.stringify(this.sourceArticle).replace(/\\n/g, '<br>')) + '<br><br>'
						this.nodes = this.sourceArticle
						this.$API('PostArticle', {title: this.articleTitle, content: this.sourceArticle})
							.then(res => {
								this.$WX.toast('文章已提交审核')
								setTimeout(() => {
									this.$WX.jumpTo('./home')
								}, 500)
							})
					})
			}
		}
		events = {}
		props = {}
	}
</script>
